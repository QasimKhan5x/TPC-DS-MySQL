WITH SSR AS (
    SELECT 
        S_STORE_ID,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN SALES_PRICE ELSE 0 END) AS SALES,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN PROFIT ELSE 0 END) - SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN RETURN_AMT ELSE 0 END) AS RETURNS,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT_LOSS
    FROM (
        SELECT 
            'SALES' AS SOURCE,
            SS_STORE_SK AS STORE_SK,
            SS_SOLD_DATE_SK AS DATE_SK,
            SS_EXT_SALES_PRICE AS SALES_PRICE,
            SS_NET_PROFIT AS PROFIT,
            0 AS RETURN_AMT,
            0 AS NET_LOSS
        FROM STORE_SALES
        WHERE SS_SOLD_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
        UNION ALL
        SELECT 
            'RETURNS' AS SOURCE,
            SR_STORE_SK AS STORE_SK,
            SR_RETURNED_DATE_SK AS DATE_SK,
            0 AS SALES_PRICE,
            0 AS PROFIT,
            SR_RETURN_AMT AS RETURN_AMT,
            SR_NET_LOSS AS NET_LOSS
        FROM STORE_RETURNS
        WHERE SR_RETURNED_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
    ) AS SALESRETURNS
    JOIN STORE ON SALESRETURNS.STORE_SK = STORE.S_STORE_SK
    GROUP BY S_STORE_ID
),
CSR AS (
    SELECT 
        CP_CATALOG_PAGE_ID,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN SALES_PRICE ELSE 0 END) AS SALES,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN PROFIT ELSE 0 END) - SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN RETURN_AMT ELSE 0 END) AS RETURNS,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT_LOSS
    FROM (
        SELECT 
            'SALES' AS SOURCE,
            CS_CATALOG_PAGE_SK AS PAGE_SK,
            CS_SOLD_DATE_SK AS DATE_SK,
            CS_EXT_SALES_PRICE AS SALES_PRICE,
            CS_NET_PROFIT AS PROFIT,
            0 AS RETURN_AMT,
            0 AS NET_LOSS
        FROM CATALOG_SALES
        WHERE CS_SOLD_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
        UNION ALL
        SELECT 
            'RETURNS' AS SOURCE,
            CR_CATALOG_PAGE_SK AS PAGE_SK,
            CR_RETURNED_DATE_SK AS DATE_SK,
            0 AS SALES_PRICE,
            0 AS PROFIT,
            CR_RETURN_AMOUNT AS RETURN_AMT,
            CR_NET_LOSS AS NET_LOSS
        FROM CATALOG_RETURNS
        WHERE CR_RETURNED_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
    ) AS SALESRETURNS
    JOIN CATALOG_PAGE ON SALESRETURNS.PAGE_SK = CATALOG_PAGE.CP_CATALOG_PAGE_SK
    GROUP BY CP_CATALOG_PAGE_ID
),
WSR AS (
    SELECT 
        WEB_SITE_ID,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN SALES_PRICE ELSE 0 END) AS SALES,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'SALES' THEN PROFIT ELSE 0 END) - SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN RETURN_AMT ELSE 0 END) AS RETURNS,
        SUM(CASE WHEN SALESRETURNS.SOURCE = 'RETURNS' THEN NET_LOSS ELSE 0 END) AS PROFIT_LOSS
    FROM (
        SELECT 
            'SALES' AS SOURCE,
            WS_WEB_SITE_SK AS WSR_WEB_SITE_SK,
            WS_SOLD_DATE_SK AS DATE_SK,
            WS_EXT_SALES_PRICE AS SALES_PRICE,
            WS_NET_PROFIT AS PROFIT,
            0 AS RETURN_AMT,
            0 AS NET_LOSS
        FROM WEB_SALES
        WHERE WS_SOLD_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
        UNION ALL
        SELECT 
            'RETURNS' AS SOURCE,
            WS_WEB_SITE_SK AS WSR_WEB_SITE_SK,
            WR_RETURNED_DATE_SK AS DATE_SK,
            0 AS SALES_PRICE,
            0 AS PROFIT,
            WR_RETURN_AMT AS RETURN_AMT,
            WR_NET_LOSS AS NET_LOSS
        FROM WEB_RETURNS
        LEFT OUTER JOIN WEB_SALES ON (WR_ITEM_SK = WS_ITEM_SK AND WR_ORDER_NUMBER = WS_ORDER_NUMBER)
        WHERE WR_RETURNED_DATE_SK IN (SELECT D_DATE_SK FROM DATE_DIM WHERE D_DATE BETWEEN '2002-08-09' AND DATE_ADD('2002-08-09', INTERVAL 14 DAY))
    ) AS SALESRETURNS
    JOIN WEB_SITE ON SALESRETURNS.WSR_WEB_SITE_SK = WEB_SITE.WEB_SITE_SK
    GROUP BY WEB_SITE_ID
)
SELECT 
    CHANNEL,
    ID,
    SUM(SALES) AS SALES,
    SUM(RETURNS) AS RETURNS,
    SUM(PROFIT) AS PROFIT
FROM (
    SELECT 
        'STORE CHANNEL' AS CHANNEL,
        CONCAT('STORE', S_STORE_ID) AS ID,
        SALES,
        RETURNS, PROFIT
    FROM SSR
    UNION ALL
    SELECT 
        'CATALOG CHANNEL' AS CHANNEL,
        CONCAT('CATALOG_PAGE', CP_CATALOG_PAGE_ID) AS ID,
        SALES,
        RETURNS, PROFIT
    FROM CSR
    UNION ALL
    SELECT 
        'WEB CHANNEL' AS CHANNEL,
        CONCAT('WEB_SITE', WEB_SITE_ID) AS ID,
        SALES,
        RETURNS, PROFIT
    FROM WSR
) X
GROUP BY CHANNEL, ID
WITH ROLLUP
ORDER BY CHANNEL, ID
LIMIT 100;